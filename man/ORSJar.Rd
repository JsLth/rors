% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jar.R
\name{ORSJar}
\alias{ORSJar}
\title{ORS JAR instance}
\description{
Creates a new ORS instance object that operates on a JAR instance of
OpenRouteservice, i.e. an instance that is started using a .jar file.
This R6 class is typically constructed by \code{\link{ors_instance}}.
\code{ORSJar} requires JDK >= 17 to be installed on the system. If this
requirement cannot be met, consider using \code{\link{ORSDocker}} or
\code{\link{ORSWar}}.

For technical details on the setup of local ORS instances, refer to the
\href{https://giscience.github.io/openrouteservice/run-instance/running-jar}{Running JAR documentation}.
For details on how to use \code{ORSJar} objects, refer to the installation
vignette:

\preformatted{
vignette("ors-installation", package = "rors")
}
}
\examples{
\dontrun{
# create a new ORS instance of type JAR
# downloads ors.jar to a new directory
ors <- ors_instance(type = "jar")

# set a random port to ensure that the port is not used
ors$set_port()

# download and set an OSM file
ors$set_extract("Rutland")

# run an OpenRouteService server
ors$run()

# the external process that runs the server is stored in the object
ors$proc$is_alive() # should return true

# retrieve runtime logs
ors$show_logs()

# stop the server
ors$stop()
}
}
\section{Super classes}{
\code{\link[rors:ORSInstance]{rors::ORSInstance}} -> \code{\link[rors:ORSLocal]{rors::ORSLocal}} -> \code{ORSJar}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{paths}}{List of relevant file paths for the ORS setup. Includes
the top directory, config file, and extract file.}

\item{\code{proc}}{\code{processx} process that is used to control the external
process running the OpenRouteService instance. Refer to
\code{\link[processx]{process}} for a reference of methods.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ORSJar-new}{\code{ORSJar$new()}}
\item \href{#method-ORSJar-purge}{\code{ORSJar$purge()}}
\item \href{#method-ORSJar-set_port}{\code{ORSJar$set_port()}}
\item \href{#method-ORSJar-show_logs}{\code{ORSJar$show_logs()}}
\item \href{#method-ORSJar-run}{\code{ORSJar$run()}}
\item \href{#method-ORSJar-stop}{\code{ORSJar$stop()}}
\item \href{#method-ORSJar-is_init}{\code{ORSJar$is_init()}}
\item \href{#method-ORSJar-is_running}{\code{ORSJar$is_running()}}
\item \href{#method-ORSJar-clone}{\code{ORSJar$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSInstance" data-id="get_status"><a href='../../rors/html/ORSInstance.html#method-ORSInstance-get_status'><code>rors::ORSInstance$get_status()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSInstance" data-id="get_url"><a href='../../rors/html/ORSInstance.html#method-ORSInstance-get_url'><code>rors::ORSInstance$get_url()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSInstance" data-id="is_mounted"><a href='../../rors/html/ORSInstance.html#method-ORSInstance-is_mounted'><code>rors::ORSInstance$is_mounted()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSInstance" data-id="is_ready"><a href='../../rors/html/ORSInstance.html#method-ORSInstance-is_ready'><code>rors::ORSInstance$is_ready()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSLocal" data-id="add_profiles"><a href='../../rors/html/ORSLocal.html#method-ORSLocal-add_profiles'><code>rors::ORSLocal$add_profiles()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSLocal" data-id="report"><a href='../../rors/html/ORSLocal.html#method-ORSLocal-report'><code>rors::ORSLocal$report()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSLocal" data-id="rm_extract"><a href='../../rors/html/ORSLocal.html#method-ORSLocal-rm_extract'><code>rors::ORSLocal$rm_extract()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSLocal" data-id="rm_profiles"><a href='../../rors/html/ORSLocal.html#method-ORSLocal-rm_profiles'><code>rors::ORSLocal$rm_profiles()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSLocal" data-id="set_endpoints"><a href='../../rors/html/ORSLocal.html#method-ORSLocal-set_endpoints'><code>rors::ORSLocal$set_endpoints()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSLocal" data-id="set_extract"><a href='../../rors/html/ORSLocal.html#method-ORSLocal-set_extract'><code>rors::ORSLocal$set_extract()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSLocal" data-id="update"><a href='../../rors/html/ORSLocal.html#method-ORSLocal-update'><code>rors::ORSLocal$update()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-new"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-new}{}}}
\subsection{Method \code{new()}}{
Initialize the ORSJar object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$new(dir, version = "8.1.1", overwrite = FALSE, verbose = TRUE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dir}}{\code{[character]}

Custom OpenRouteService directory. If not specified, the jar file will
be downloaded to the current working directory. If a directory called
\code{"openrouteservice-{version}"} is present, the download will be skipped.
Ignored if \code{server} is not \code{NULL}.}

\item{\code{version}}{\code{[character]}

The OpenRouteService version to use. Can either be a version number (e.g.
8.1.1) or \code{"master"}.}

\item{\code{overwrite}}{\code{[logical]}

Whether to overwrite the current OpenRouteService directory if it exists.}

\item{\code{verbose}}{\code{[logical]}

Level of verbosity. If \code{TRUE}, shows informative warnings and messages,
spinners, progress bars and system notifications.}

\item{\code{...}}{Not used.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-purge"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-purge}{}}}
\subsection{Method \code{purge()}}{
Purge ORS instance, i.e. take down container, (optionally) delete
image, delete ORS directory, and clean up R6 class.

This method can be useful for testing and writing reproducible
examples and can easily be used together with \code{\link{on.exit}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$purge()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-set_port"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-set_port}{}}}
\subsection{Method \code{set_port()}}{
Set a HTTP port for the spring server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$set_port(port = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{port}}{\code{[numeric]/\code{NULL}}

Port to use. If \code{NULL}, assigns a random port using
\code{\link[httpuv:randomPort]{randomPort()}}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-show_logs"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-show_logs}{}}}
\subsection{Method \code{show_logs()}}{
Show logs of OpenRouteService. Useful for debugging docker setups.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$show_logs(source = c("logfile", "process"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source}}{\code{[logical]}

Where to retrieve logs from. If \code{"process"}, reads the standard
output from the external process running OpenRouteService. If
\code{"logfile"}, reads the log file in the top directory. Generally,
the log file provides less information, but stores the logs from
previous runs. The process logs are reset with every run. Process logs
are also much more error-prone.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-run"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-run}{}}}
\subsection{Method \code{run()}}{
Run ors.jar to start a local OpenRouteService server. Creates an
attribute of \code{ORSJar} called \code{proc} which stores the external
process used to run the server. A running server can (and should) be
stopped using the \code{$stop()} method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$run(wait = TRUE, init = NULL, max = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wait}}{\code{[wait]}

Whether to wait for the server to start and then give out a visual
and audible notification. If \code{FALSE}, returns control of the
console back to the user. The status of the OpenRouteService server
can then be polled using the \code{proc} attribute.}

\item{\code{init}}{\code{[numeric/NULL]}

Initial memory. This can change if more memory is needed. If not
specified, uses \code{max}. If both are \code{NULL}, estimates
memory.}

\item{\code{max}}{\code{[numeric/NULL]}

Maximum memory. The container is not allowed to use more
memory than this value. If not specified, uses \code{init}. If both are
\code{NULL}, estimates memory.}

\item{\code{...}}{Further options passed to the
\href{https://docs.oracle.com/en/java/javase/17/docs/specs/man/java.html}{\code{java}} command.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-stop"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-stop}{}}}
\subsection{Method \code{stop()}}{
Stops a running OpenRouteService instance by killing the external
process.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$stop()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-is_init"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-is_init}{}}}
\subsection{Method \code{is_init()}}{
Checks if ORS is initialized. ORS is initialized if it was built
for the first time. An initialized ORS instance has a subdirectory
called \code{"graphs"} that contains built graphs for at least one
routing profile. \code{$is_init()} therefore checks for the
existence of at least one sub-directory of \code{"graphs"}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$is_init()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-is_running"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-is_running}{}}}
\subsection{Method \code{is_running()}}{
Checks if the ORS process is running. You can control this state using
\code{$run()} and \code{$stop()}. Check \code{$is_ready()} to see
if the ORS setup succeeded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$is_running()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSJar-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ORSJar-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSJar$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
