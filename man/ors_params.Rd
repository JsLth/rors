% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameters.R
\name{ors_params}
\alias{ors_params}
\title{Construct ORS parameters}
\usage{
ors_params(
  profile,
  n = NULL,
  bearings = NULL,
  alternative_routes = list(),
  geometry_simplify = FALSE,
  continue_straight = FALSE,
  preference = "recommended",
  radiuses = NULL,
  maximum_speed = NULL,
  attributes = NULL,
  extra_info = NULL,
  elevation = FALSE,
  skip_segments = NULL,
  roundabout_exits = FALSE,
  maneuvers = FALSE,
  suppress_warnings = FALSE,
  id = NULL,
  instructions = TRUE,
  instructions_format = "text",
  language = "en",
  avoid_borders = NULL,
  avoid_countries = NULL,
  avoid_features = NULL,
  avoid_polygons = NULL,
  round_trip = list(),
  vehicle_type = "hgv",
  restrictions = list(),
  weightings = list(),
  surface_quality_known = FALSE,
  allow_unsuitable = FALSE
)
}
\arguments{
\item{profile}{\code{[character]}

A routing profile defined by ORS. Not all combinations of
profiles and parameters are supported.}

\item{n}{\code{[integer]}

Number of observations used for routing. This value refers to
segments as described in \code{\link{ors_inspect}}. For use in
\code{\link{ors_pairwise}} it should always be 1.}

\item{bearings}{\code{[numeric]}

Numeric vector or matrix with \code{n} rows and 1 or 2 columns. The first
column contains bearings that can take radial degrees between 0 and 360
(clockwise) that represent the direction during routing. An optional
second column specifies the possible deviation from the bearings. Both
values can also be \code{NA_real_} to skip a value or an entire input
row. Bearings default to 100 if not specified. Only available for
\code{cycling-*} profiles.}

\item{alternative_routes}{\code{{list}}

List of options for generating alternative routes. Can be one of the
following options:

\describe{
\item{\code{target_count}}{Number of alternatives that should be computed.}
\item{\code{weight_factor}}{Multiplier that specifies by what factor an
alternative routes is allowed to diverge from the optimal route.
Defaults to 1.4.}
\item{\code{share_factor}}{Multiplier that specificies the fraction an
alternative route is allowed to share with the optimal route. Defaults
to 0.6.}
}

Because this parameter changes the output format, it is only available
in \code{ors_inspect}.}

\item{geometry_simplify}{\code{[logical]}

Whether to simplify the route geometry. Only possible if
\code{length(n) == 1}. Not available if \code{extra_info}s are specified.}

\item{continue_straight}{\code{[logical]}

Whether to force the route to go straight and avoid u-turns.}

\item{preference}{\code{[character]}

Specifies the route preference. Must be once of \code{"fastest"},
\code{"shortest"} or \code{"recommended"}. Defaults to \code{"recommended"}.}

\item{radiuses}{\code{[numeric]}

Maximum snapping distance (in m) from an input point to the
nearest road. Expects a vector of length \code{n}. If a vector of length 1
is provided, values are recycled to length \code{n}. \code{-1} represents
an unlimited radius. Defaults to \code{maximum_snapping_radius} in the
configuration or 350m if not changed.}

\item{maximum_speed}{\code{[numeric]}

Maximum allowed speed in km/h. Must be at least 80 km/h. Only available
for \code{driving-*} profiles.}

\item{attributes}{\code{[character]}

Route attributes to be sent with each routing result. One or several of
\code{"avgspeed"}, \code{"detourfactor"} or \code{"percentage"}.}

\item{extra_info}{\code{[character]}

Extra information to be sent with each routing result. For a list of
possible values, see the details section in \code{\link{ors_inspect}}.
Because \code{extra_info} changes the output format, it is only available for
\code{\link{ors_inspect}}.}

\item{elevation}{\code{[logical]}

Whether to include elevation information in the routing response.}

\item{skip_segments}{\code{[numeric]}

Vector of route segments to skip. Must be values between 1 and n where
1 represents the segment between the first and second input point.}

\item{roundabout_exits}{\code{[logical]}

Whether to include information about bearings of roundabout exits in
the routing response.}

\item{maneuvers}{\code{[logical]}

Whether to include information about maneuvers in the routing response.
Maneuvers describe the bearing before and after a waypoint has been
passed on a route.}

\item{suppress_warnings}{\code{[logical]}

Whether to suppress warnings in the routing response.}

\item{id}{\code{[character]}

Any identifier to be sent with the routing request and returned in the
routing response.}

\item{instructions}{\code{[logical]}

Whether to include navigation information in the routing response.}

\item{instructions_format}{\code{[character]}

Format for navigation instructions. Can be one of \code{"text"} or
\code{"html"}. HTML instructions are more verbose.}

\item{language}{\code{[character]}

Language of the navigation instructions. One of \code{"cs"}, \code{"cs-cz"},
\code{"de"}, \code{"de-de"}, \code{"en"}, \code{"en-us"}, \code{"eo"},
\code{"eo-eo"}, \code{"es"}, \code{"es-es"}, \code{"fr"}, \code{"fr-fr"},
\code{"gr"}, \code{"gr-gr"}, \code{"he"}, \code{"he-il"}, \code{"hu"},
\code{"hu-hu"}, \code{"id"}, \code{"id-id"}, \code{"it"}, \code{"it-it"},
\code{"ja"}, \code{"ja-jp"}, \code{"ne"}, \code{"ne-np"}, \code{"nl"},
\code{"nl-nl"}, \code{"nb"}, \code{"nb-no"}, \code{"pl"}, \code{"pl-pl"},
\code{"pt"}, \code{"pt-pt"}, \code{"ro"}, \code{"ro-ro"}, \code{"ru"},
\code{"ru-ru"}, \code{"tr"}, \code{"tr-tr"}, \code{"zh"} or \code{"zh-cn"}.}

\item{avoid_borders}{\code{[character]}

Type of border to avoid. One of \code{"all"}, \code{"controlled"},
or \code{"none"}. Requires \code{driving-*} profiles.}

\item{avoid_countries}{\code{[integer]}

Vector of country codes to avoid. Requires
\code{avoid_borders = "controlled"}. A list of country codes can be
found in the
\href{https://giscience.github.io/openrouteservice/technical-details/country-list}{API reference}
or by running \code{\link{country_info}}.
Requires \code{driving-*} profiles.}

\item{avoid_features}{\code{[character]}

Features to avoid. One of \code{"highways"}, \code{"tollways"} or
\code{"ferries"}.}

\item{avoid_polygons}{\code{[sf/sfc]}

\code{sf} object containing polygons or multipolygons that describe areas to
avoid. Must have CRS \code{EPSG:4326}.}

\item{round_trip}{\code{[list]}

List of options for generating round trips. Can include the following
options:

\describe{
\item{\code{length}}{Target length of the round trip (in m)}
\item{\code{points}}{Number of points to create the round trip}
\item{\code{seed}}{RNG seed to control randomness in the direction of the
round trip}
}

Because this parameter changes the output format, it is only available
in \code{ors_inspect}.}

\item{vehicle_type}{\code{[character]}

If \code{profile} is \code{"driving-hgv"}, specifies the vehicle type.
One of \code{"hgv"}, \code{"bus"}, \code{"agricultural"},
\code{"agricultural"}, \code{"delivery"}, \code{"forestry"}, \code{"goods"}
or \code{"unknown"}.}

\item{restrictions}{\code{[list]}

List of options for restricting waypoint edges. If an edge does not
meet the restrictions, it is discarded. Can include the following options:

\describe{
\item{\code{length}}{Length restrictions for \code{"driving-hgv"} in m.}
\item{\code{width}}{Width restrictions for \code{"driving-hgv"} in m.}
\item{\code{height}}{Height restrictions for \code{"driving-hgv"} in m.}
\item{\code{axleload}}{Axleload restrictions for \code{"driving-hgv"} in tons.}
\item{\code{weight}}{Weight restrictions for \code{"driving-hgv"} in m.}
\item{\code{hazmat}}{Whether to adjust routing for transportation hazardous goods,
i.e. avoid protected areas, for \code{"driving-hgv"}. Defaults to
\code{FALSE}.}
\item{\code{surface_type}}{Minimum surface type for \code{"wheelchair"}.
Corresponds to the values of OSM
\href{https://wiki.openstreetmap.org/wiki/Key:surface}{Key:surface}.
Defaults to \code{"sett"}.}
\item{\code{track_type}}{Minimum track grade for \code{"wheelchair"}.
Corresponds to the values of OSM
\href{https://wiki.openstreetmap.org/wiki/Key:tracktype}{Key:tracktype}.
Defaults to \code{"grade1"}.}
\item{\code{smoothness_type}}{Minimum track smoothness for \code{"wheelchair"}.
Corresponds to the values of OSM
\href{https://wiki.openstreetmap.org/wiki/Key:smoothness}{Key:smoothness}.
Defaults to \code{"good"}.}
\item{\code{maximum_sloped_kerb}}{Maximum sloped curb height for
\code{"wheelchair"} (in m). Defaults to 0.6 m.}
\item{\code{maximum_incline}}{Maximum incline for \code{"wheelchair"} (in percent).
Defaults to 6 percent.}
\item{\code{minimum_width}}{Minimum footway width for \code{"wheelchair"} (in m).
Defaults to 2.5 m.}
}}

\item{weightings}{\code{[list]}

List of options for weighting waypoint edges. Can include the following
options:

\describe{
\item{steepness_difficulty}{Proficiency level for \code{cycling-*}
profiles. Can be an integer between 0 and 3 corresponding to the
levels "novice", "moderate", "amateuer" and "pro".}
\item{green}{Multiplier between 0 and 1 that weights the importance
of green areas at waypoint edges. If 1, always prefers green routes.
Only available for \code{foot-*} profiles.}
\item{quiet}{Multiplier between 0 and 1 that weights the importance
of quiet areas at waypoint edges. If 1, always prefers quiet routes.
Only available for \code{foot-*} profiles.}
\item{shadow}{Multiplier between 0 and 1 that weights the importance
of shadow areas at waypoint edges. If 1, always prefers shadowy routes.
Only available for \code{foot-*} profiles.}
}}

\item{surface_quality_known}{\code{[logical]}

Whether to force routes to follow ways whose surface quality is known.
Only available for \code{"wheelchair"} profile.}

\item{allow_unsuitable}{\code{[logical]}

Whether unsuitable ways should be included in routing. Only available
for \code{"wheelchair"} profile.}
}
\description{
Create a list of parameters that can be passed to a function that supports
additional parameters. For further information on parameters, visit the
\href{https://openrouteservice.org/dev/#/api-docs/v2}{API playground} or
the \href{https://giscience.github.io/openrouteservice/api-reference/endpoints/directions/routing-options}{backend reference}.
\code{\link{param_info}} provides an overview of the checks and
preparations performed by \code{ors_params}.

Note that this function provides a means to manually construct parameters.
For all high-level endpoint functions such as \code{\link{ors_inspect}},
parameters can be passed as dot arguments.
}
