% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local.R
\name{ORSLocal}
\alias{ORSLocal}
\title{Local ORS instance}
\description{
This R6 class is the foundation for R6 classes \code{\link{ORSDocker}},
\code{\link{ORSJar}} and \code{\link{ORSWar}} and cannot be initialized.
It defines methods to manage and modify configurations and extracts of
OpenRouteService.
}
\examples{
\dontrun{
ors <- ors_instance(dir = "~", type = "docker")
ors <- ors_instance(dir = "~", type = "jar")
ors <- ors_instance(dir = "~", type = "war")
}
}
\section{Super class}{
\code{\link[rors:ORSInstance]{rors::ORSInstance}} -> \code{ORSLocal}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{paths}}{List of relevant file paths for the ORS setup. Includes
the top directory, compose file, config file and extract file.}

\item{\code{version}}{Version of the local ORS backend}

\item{\code{config}}{Information of the configuration file (\code{ors-config.yml}).
The config file holds various options about the ORS instance. This
field gives details about:

\itemize{
\item{profiles: A named vector of active routing profiles}
\item{parsed: Parsed configuration file. When making changes to
this obhect, make sure to run \code{$update()} to apply the changes.
For details, refer to the
\href{https://giscience.github.io/openrouteservice/run-instance/configuration/}{ORS reference}.}
}}

\item{\code{extract}}{Information on the extract file. Contains the name and
size of the selected extract file.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ORSLocal-update}{\code{ORSLocal$update()}}
\item \href{#method-ORSLocal-report}{\code{ORSLocal$report()}}
\item \href{#method-ORSLocal-set_extract}{\code{ORSLocal$set_extract()}}
\item \href{#method-ORSLocal-rm_extract}{\code{ORSLocal$rm_extract()}}
\item \href{#method-ORSLocal-add_profiles}{\code{ORSLocal$add_profiles()}}
\item \href{#method-ORSLocal-rm_profiles}{\code{ORSLocal$rm_profiles()}}
\item \href{#method-ORSLocal-set_endpoints}{\code{ORSLocal$set_endpoints()}}
\item \href{#method-ORSLocal-clone}{\code{ORSLocal$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSInstance" data-id="get_status"><a href='../../rors/html/ORSInstance.html#method-ORSInstance-get_status'><code>rors::ORSInstance$get_status()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSInstance" data-id="is_mounted"><a href='../../rors/html/ORSInstance.html#method-ORSInstance-is_mounted'><code>rors::ORSInstance$is_mounted()</code></a></span></li>
<li><span class="pkg-link" data-pkg="rors" data-topic="ORSInstance" data-id="is_ready"><a href='../../rors/html/ORSInstance.html#method-ORSInstance-is_ready'><code>rors::ORSInstance$is_ready()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-update"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-update}{}}}
\subsection{Method \code{update()}}{
Updates ORS instance. Use this to apply changes made either in the
file system or to the \code{\link{ors_instance}} object itself. This
method is automatically called when using any method of
\code{ors_instance} that changes the ORS setup.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$update(what = c("fs", "self"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{what}}{\code{[character]}

Whether to change the file system with changes in R or update the
instance object with changes in the file system. If \code{what = "self"},
parses the relevant files in the ORS directory and updates the
\code{ors_instance} object. If \code{what = "fs"}, updates the
compose file and config file based on the changes made to the
\code{ors_instance} object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-report"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-report}{}}}
\subsection{Method \code{report()}}{
Prints a situation report of the ORS instance. Invokes all relevant
print methods that summarize the current state of the instance
object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$report()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-set_extract"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-set_extract}{}}}
\subsection{Method \code{set_extract()}}{
Download and set an OpenStreetMap extract for use in ORS. Wrapper for
\code{\link[osmextract:oe_get]{oe_get()}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$set_extract(
  place,
  provider = "geofabrik",
  timeout = NULL,
  file = NULL,
  do_use = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{place}}{\code{[various]}

Place name, \code{sf/sfc/bbox} object or bounding box for which to
download an extract file. For details, refer to
\code{\link[osmextract:oe_match]{oe_match()}}.}

\item{\code{provider}}{\code{[character/NULL]}

Extract provider to download extract from. Available
providers can be found by running
\code{\link[osmextract:oe_providers]{oe_providers()}}. If \code{NULL},
tries all providers.}

\item{\code{timeout}}{\code{[numeric]}

Timeout for extract downloads. Defaults to \code{getOption("timeout")}.}

\item{\code{file}}{\code{[character/NULL]}

Path to a local OSM extract. Can either be a full path to any OSM file
or the filename of an OSM file in the data folder of ORS. If file is
specified, \code{place} and \code{provider} are ignored.}

\item{\code{do_use}}{\code{[logical]}

If \code{TRUE}, enables graph building with the new extract. If
\code{FALSE}, does not change the compose file at all.}

\item{\code{...}}{Further arguments passed to
\code{\link[osmextract:oe_get]{oe_get()}}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-rm_extract"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-rm_extract}{}}}
\subsection{Method \code{rm_extract()}}{
Removes extract files from the data directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$rm_extract(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{File names of extract files in the data directory. All
files that exist are removed. Can also be a single vector of file
names.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-add_profiles"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-add_profiles}{}}}
\subsection{Method \code{add_profiles()}}{
Add routing profiles to the ORS configuration. ORS only builds routing
graphs for active profiles.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$add_profiles(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Objects of class \code{\link{ors_profile}} or character
strings. If a character string is passed, it is interpreted as
\code{ors_profile(..., template = TRUE)}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-rm_profiles"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-rm_profiles}{}}}
\subsection{Method \code{rm_profiles()}}{
Remove routing profiles from the ORS configuration.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$rm_profiles(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Names of routing profiles to remove. \code{"default"}
removes profile defaults. Can also be a single character vector.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-set_endpoints"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-set_endpoints}{}}}
\subsection{Method \code{set_endpoints()}}{
Change endpoint-specific configurations. Specifies options that are
relevant for entire API endpoints such as isochrones.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$set_endpoints(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{\code{[list/NULL]}

Named arguments containing the configuration for the endpoints.
Available endpoits are \code{routing}, \code{isochrones},
\code{matrix}, and \code{snap}. Refer to
\href{https://github.com/GIScience/openrouteservice/blob/master/ors-api/src/main/resources/application.yml}{application.yml}
for a list of defaults.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ORSLocal-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ORSLocal-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ORSLocal$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
