% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snap.R
\name{ors_snap}
\alias{ors_snap}
\title{Snap to nearest street}
\usage{
ors_snap(src, profile = get_profiles(), radius = 350, instance = NULL, ...)
}
\arguments{
\item{src}{\code{[sf/sfc]}

Source dataset containing point geometries that should be routed from.}

\item{profile}{\code{[character]}

Means of transport as supported by OpenRouteService.
Defaults to the first profile in a call to \code{\link{get_profiles}}.
For \code{ors_shortest_distances}, \code{profile} can be a character
vector, for all other functions it needs to be a character scalar.
For details on all profiles, refer to the
\href{https://giscience.github.io/openrouteservice/documentation/Tag-Filtering.html}{documentation}.}

\item{radius}{\code{[numeric]}

Snapping radius. Points are only snapped to a street if the street lies
within this distance to the source point.}

\item{instance}{\code{[ors_instance]}

Object of an OpenRouteService instance that should be used for route
computations. It is recommended to use \code{\link{ors_instance}}
to set an instance globally. This argument should only be used if activating
an instance globally is not feasible.}

\item{...}{Additional arguments passed to the snap API.}
}
\value{
A dataframe containing the snapped geometries of each point in
\code{src} together with the name of the street and the snapping distance.
}
\description{
Queries the snap endpoint to snap source points to the nearest accessible
street.
}
\examples{
\dontrun{
plot(pharma, col = "black")

snap1 <- ors_snap(pharma)
plot(snap1, add = TRUE, col = "red")

snap2 <- ors_snap(pharma, radius = 5000)
plot(snap2, add = TRUE, col = "blue")

snap3 <- ors_snap(pharma, profile = "foot-walking")
plot(snap3, add = TRUE, col = "green")
}
}
